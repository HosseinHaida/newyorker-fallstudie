events {
    worker_connections 1024;
}

http {

    upstream api {
        server api:3333;
    }

    upstream frontend {
        server frontend:8080;
    }

    server {
        listen 80;
        server_name ny-casestudy.heidaho.com www.ny-casestudy.heidaho.com;
        return 301 https://$host$request_uri;
    }
    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }
    server {
        listen 443 ssl;
        ssl_certificate /etc/letsencrypt/archive/ny-casestudy.heidaho.com-0002/fullchain1.pem;
        ssl_certificate_key /etc/letsencrypt/archive/ny-casestudy.heidaho.com-0002/privkey1.pem;
        server_name _;
        if ($server_port !~ 443) {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name ny-casestudy.heidaho.com www.ny-casestudy.heidaho.com;

        ssl_certificate /etc/letsencrypt/archive/ny-casestudy.heidaho.com-0002/fullchain1.pem;
        ssl_certificate_key /etc/letsencrypt/archive/ny-casestudy.heidaho.com-0002/privkey1.pem;

        ssl_session_cache shared:le_nginx_SSL:10m;
        ssl_session_timeout 1440m;
        ssl_session_tickets off;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;

        ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

        index index.html;

        location / {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded_For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_pass http://frontend;
            proxy_ssl_session_reuse off;
            proxy_set_header Host $http_host;
            proxy_pass_header Server;
            proxy_cache_bypass $http_upgrade;
            proxy_redirect off;
        }

        location /api {
            rewrite ^/api/(.*) /$1 break;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded_For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_pass http://api/;
            proxy_ssl_session_reuse off;
            proxy_set_header Host $http_host;
            proxy_pass_header Server;
            proxy_cache_bypass $http_upgrade;
            proxy_redirect off;
        }

    }
}